name: Create Workshop File

on:
  issues:
    types: [labeled, edited]

jobs:
  create_file:
    runs-on: ubuntu-latest
    if: ${{ github.event.label.name == 'new-workshop' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install grep
        run: sudo apt-get update && sudo apt-get install -y grep
      - name: Extract workshop name
        id: extract
        run: |
          body="${{ github.event.issue.body }}"
          name=$(echo "${body}" | grep -oP '(?<=### Name of workshop\n).*')
          echo "name=${name}" >> $GITHUB_ENV
      - name: Create file
        id: create_file
        run: |
          name="${{ steps.extract.outputs.name }}"
          file_name=$(echo "${name}" | tr '[:upper:]' '[:lower:]' | tr -d '[:space:]' | tr -d ',')
          mkdir -p workshops
          touch "workshops/${name}.md"
          echo "file_name=${name}" >> $GITHUB_ENV
      - name: Check for invite request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const comments = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            const commenter = comments.data.find(comment => comment.body.includes('.inviteme'))?.user.login;
            if (commenter) {
              await github.orgs.addOrUpdateMembership({
                org: 'your-organization-name',
                username: commenter,
                role: 'member'
              });
              const file = `workshops/${name}.md`;
              const content = `* ${commenter}\n`;
              await github.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: file,
                message: `Add ${commenter} to ${file}`,
                content: Buffer.from(content).toString('base64'),
                sha: context.sha
              });
            }
